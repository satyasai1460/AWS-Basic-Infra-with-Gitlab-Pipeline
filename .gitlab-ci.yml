default:
  tags:
    - Terraform

variables:
  TERRAFORM_DESTROY: "YES"
  TERRAFORM_APPLY: "NO"
  TERRAFORM_VERSION: "1.6.2"

stages:
  - terraform-init
  - terraform-fmt-validate
  - terraform-plan
  - terraform-apply
  - terraform-destroy

job-check-terraform-version:
  stage: terraform-init
  rules:
    - if: $TERRAFORM_DESTROY == "NO" && $TERRAFORM_APPLY =="YES"
  script:
    - pwd && ls -al && terraform version

job-run-terraform-init:
  stage: terraform-init
  rules:
    - if: $TERRAFORM_DESTROY == "NO"
  script:
    - pwd
    - echo $AWS_ACCESS_KEY_ID
    - echo $AWS_SECRET_ACCESS_KEY
    - terraform init

job-run-terraform-fmt-validate:
  stage: terraform-fmt-validate
  rules:
    - if: $TERRAFORM_DESTROY == "NO" && $TERRAFORM_APPLY =="YES"
  script:
    - pwd
    - echo $AWS_ACCESS_KEY_ID
    - echo $AWS_SECRET_ACCESS_KEY
    - terraform init
    - terraform fmt && terraform validate

job-run-terraform-plan:
  stage: terraform-plan
  allow_failure: true
  rules:
    - if: $TERRAFORM_DESTROY == "NO" || $TERRAFORM_APPLY =="YES"
  script:
    - terraform init
    - terraform plan

job-run-terraform-apply:
  variables: {}
  stage: terraform-apply
  needs: ["job-run-terraform-plan"]
  rules:
    - if: $TERRAFORM_DESTROY == "NO" && $TERRAFORM_APPLY =="YES"
  script:
    - ls -al
    - terraform init
    - terraform apply --auto-approve

job-run-terraform-destroy:
  stage: terraform-destroy
  #needs: ["job-run-terraform-plan"]
  variables:
    JOB_VAR: "A job variable"
  rules:
    - if: $TERRAFORM_DESTROY == "YES"
  script:
    - pwd
    - ls -al
    - terraform destroy --auto-approve
